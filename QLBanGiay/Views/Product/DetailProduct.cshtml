@model Product
@using Microsoft.AspNetCore.Http
@{
	var username = Context.Session.GetString("Username");
	var userid = Context.Session.GetString("UserId");
}
<div class="colorlib-product">
	<div class="container">
		<div class="row row-pb-lg product-detail-wrap">
			<div class="col-sm-8">
				<img src="~/images/@Model.Image"style="width: 90%; height: 90%; object-fit: cover;" alt="@Model.Productname" />
			</div>
			<div class="col-sm-4">
				<div class="product-desc">
					<h3>@Model.Productname</h3>
					<p class="price">
						<span>@(((decimal)(Model.Price * (1 - Model.Discount / 100M)))) VNĐ</span>
						<span class="rate">
							<i class="icon-star-full"></i>
							<i class="icon-star-full"></i>
							<i class="icon-star-full"></i>
							<i class="icon-star-full"></i>
							<i class="icon-star-half"></i>
							(74 Rating)
						</span>
					</p>
					<p>@Model.Category?.Categoryname</p>
					<div class="size-wrap">
						<div class="block-26 mb-2">
							<h4>Size</h4>
							<ul>
								@foreach (var size in Model.ProductSizes)
								{
									<li><a class="size-option" data-size="@size.Size">@size.Size</a></li>
								}
							</ul>
						</div>
					</div>
					<div class="input-group mb-4">
						<span class="input-group-btn">
							<button type="button" class="quantity-left-minus btn" data-type="minus" data-field="">
								<i class="icon-minus2"></i>
							</button>
						</span>
						<input type="text" id="quantity" name="quantity" class="form-control input-number" value="1" min="1" max="100">
						<span class="input-group-btn ml-1">
							<button type="button" class="quantity-right-plus btn" data-type="plus" data-field="">
								<i class="icon-plus2"></i>
							</button>
						</span>
					</div>
					<div class="row">
						<div class="col-sm-12 text-center">
							<p><a href="cart.html" class="btn btn-primary btn-addtocart addtocart"><i class="icon-shopping-cart"></i> Add to Cart</a></p>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="row">
			<div class="col-sm-12">
				<div class="row">
					<div class="col-md-12 pills">
						<div class="bd-example bd-example-tabs">
							<ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">

								<li class="nav-item">
									<a class="nav-link active" id="pills-description-tab" data-toggle="pill" href="#pills-description" role="tab" aria-controls="pills-description" aria-expanded="true">Description</a>
								</li>
							</ul>

							<div class="tab-content" id="pills-tabContent">
								<div class="tab-pane border fade show active" id="pills-description" role="tabpanel" aria-labelledby="pills-description-tab">
									<p>@Model.Productdescription</p>
									<ul>
										<li>The Big Oxmox advised her not to do so</li>
										<li>Because there were thousands of bad Commas</li>
										<li>Wild Question Marks and devious Semikoli</li>
										<li>She packed her seven versalia</li>
										<li>tial into the belt and made herself on the way.</li>
									</ul>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<script>
	document.querySelector(".addtocart").addEventListener("click", function (event) {
		event.preventDefault();

		// Get selected size from the active link
		var sizeElement = document.querySelector(".size-option.selected");
		var size = sizeElement ? sizeElement.getAttribute("data-size") : null; // Get the selected size
		var quantity = parseInt(document.getElementById("quantity").value); // Get the quantity

		// Check if size is selected
		if (!size) {
			alert("Please select a size.");
			return; // Exit the function if no size is selected
		}

		// Get product ID from the model
		var productId = @Model.Productid;
		console.log("Product ID:", productId);
		console.log("Selected Size:", size);
		console.log("Quantity:", quantity);

		// Prepare request payload
		var payload = {
			productId: productId,
			size: size,
			quantity: quantity
		};

		// Get the customer ID (you can get this from your session or any other source)
		var customerId = @userid;
		console.log("Customer ID:", customerId);

		// Call the API to add product to cart
		fetch(`https://localhost:7063/api/OrderApi/api/cart/${customerId}/add`, {
			method: "POST",
			headers: {
				"Content-Type": "application/json",
			},
			body: JSON.stringify(payload),
		})
			.then(response => response.json())
			.then(data => {
				alert(data.message); // Show success message
				window.location.href = `/Cart/AddToCart?productId=${productId}`;
			})
			.catch(error => {
				console.error('Error:', error);
				alert('Failed to add product to cart'); // Show error message
			});
	});

	// Handle size selection
	document.querySelectorAll(".size-option").forEach(function (sizeOption) {
		sizeOption.addEventListener("click", function () {
			// Remove the 'selected' class from all options
			document.querySelectorAll(".size-option").forEach(function (el) {
				el.classList.remove("selected");
			});

			// Add 'selected' class to the clicked option
			sizeOption.classList.add("selected");
		});
	});
</script>
